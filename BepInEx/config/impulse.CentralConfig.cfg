## Settings file was created by plugin CentralConfig v0.16.1
## Plugin GUID: impulse.CentralConfig

[!READ THIS!]

## The bulk of settings are created and applied individually foreach different entry in a group. They are not generated until after enabling the main true/false toggle for the related setting then rebooting the game.
## Each initial entry is marked with either 'Host Only' or 'All Players'. 'Host Only' settings are only set by the host and do not run on clients. They do not need to be synced.
## 'All Players' settings MUST BE SYNCED and set on all players in the lobby.
## If in doubt just send the config file to everyone.
# Setting type: String
# Default value: This does nothing btw.
Important Info !!! = This does nothing btw.

[_DungeonLists_]

## Excludes the listed dungeons from the config. If they are already created, they will be removed on config regeneration.
# Setting type: String
# Default value: 
Blacklisted Dungeons (All Players (for dungeon size)) = 

## If set to true, only the dungeons listed above will be generated.
# Setting type: Boolean
# Default value: false
Is Dungeon Blacklist a Whitelist? (All Players (for dungeon size)) = false

[_Dungeons_]

## If set to true, this refines the dungeon loading process to retry with various imput sizes.
## Instead of a hard-cap of 20 attempts, the dungeon will go through and attempt to generate with a different size until it succeeds.
## This *should* only fail if the dungeon has its own generation issues or its size multiplier is reduced below an acceptable size to begin with.
# Setting type: Boolean
# Default value: true
Enable Dungeon Generation Safeguards? (All Players) = true

## The number of attempts made by the dungeon to generate using its original input size multiplier before it begins to adjust the multiplier either upwards or downwards.
## Previously, the size adjustment used to happen after just one failed attempt.
# Setting type: Int32
# Default value: 20
Retries before Changing Size (All Players) = 20

## The number of generation attempts spent on each size bracket (The brackets are: 20x-10x, 10x-5x, 5x-3x, 3x-2x, and 2x-1x for reference).
## Increasing this value gives an exponentially higher chance of generation success but takes more time.
# Setting type: Int32
# Default value: 25
Tries per Dungeon Size Bracket (All Players) = 25

## If set to true, allows altering various dungeon size related numbers. This includes the moon-tied size multipliers, the Dungeon's Map Tile Size (which is divided from the moon's size), a Dungeon specific min/max size clamp applied after the MTS is factored in, the scaler to determine how strict the size clamp should be, and a Dungeon specific min/max random size multiplier applied after the clamping.
# Setting type: Boolean
# Default value: false
Enable Dungeon Size Overrides? (All Players) = false

## If set to true, allows altering the dungeon selection pool tied to the dungeon by moon name, level tags, route price range, and mod name.
# Setting type: Boolean
# Default value: false
Enable Dungeon Selection Overrides? (Host Only) = false

## If set to true, allows adding/replacing enemies on levels based on the current dungeon (inside, day, and night).
# Setting type: Boolean
# Default value: false
Enable Enemy Injection by Current Dungeon? (Host Only) = false

## If set to true, allows adding scrap to levels based on matching tags.
# Setting type: Boolean
# Default value: false
Enable Scrap Injection by Current Dungeon? (Host Only) = false

[_Enemies_]

## Determines the order that adding enemies, multiplying enemy rarities, and replacing enemies occurs in.
## Used for global, tag, current weather, and current dungeon enemy injections.
## Acceptable values include "replace,multiply,add","Multiply,Replace,Add","MULTIPLY,ADD,REPLACE" etc. Do not put other stuff in it like "glipglorp".
# Setting type: String
# Default value: add,multiply,replace
Order of Operations (Host Only) = add,multiply,replace

## If set to true, extends the 20 inside/day/night enemy caps to the maximum (127) and sets the interior enemy spawn waves to be hourly instead of every other hour.
## A *small* third effect of this setting is that enemies will instantly emerge from their vent when spawned.
# Setting type: Boolean
# Default value: false
Free Them? (Host Only) = false

## When enabled, this setting adjusts the enemy spawn rate to match the new enemy powers. Note that this requires the ‘Enemy Overrides’ setting to be true.
## For example, Experimentation has a default max power of 4 for interior enemies. If you set this to 6, interior enemies will spawn ~1.5x as fast.
## This applies to interior, day, and night enemy spawns.
# Setting type: Boolean
# Default value: false
Scale Enemy Spawn Rate? (Host Only) = false

## If set to true, allows you to set a new value per moon that tweaks the enemy spawn timing.
# Setting type: Boolean
# Default value: false
Accelerate Enemy Spawning? (Host Only) = false

## If set to true, this setting flattens all personal enemy probability curves to a constant value of 1. This ensures that enemy spawning is based solely on their rarity, making the enemy spawn pool rarities accurate.
# Setting type: Boolean
# Default value: false
Flatten Enemy Curves? (Host Only) = false

## If set to true, after enemy spawn lists are updated by various means, any time there are 2 or more of the same enemy, only the entry for the enemy with the highest rarity will be kept.
## This means that if 4 sources add the bracken at various rarities, only the highest value is kept. (In "Flowerman:5,Flowerman:75,Flowerman:66,Flowerman:73" The bracken will only be added once with a rarity of 75.)
# Setting type: Boolean
# Default value: false
Remove Duplicate Enemies? (Host Only) = false

## If this and Remove Duplicates is set to true, the lowest rarity of a given enemy with be kept instead of its highest rarity.
# Setting type: Boolean
# Default value: false
Keep Smallest Rarity? (Host Only) = false

## If this and Remove Duplicates is set to true, any enemies with that have an entry of 0 rarity will be kept regardless. This allows you to blacklist enemies from specific weathers/tags/dungeons by putting EnemyName:0 under the setting.
# Setting type: Boolean
# Default value: false
Always Keep Zeros? (Host Only) = false

[_MoonLists_]

## Excludes the listed moons from the config. If they are already created, they will be removed on config regeneration.
# Setting type: String
# Default value: Liquidation,Gordion
Blacklisted Moons (All Players (for general, time, and/or misc settings)) = Liquidation,Gordion

## If set to true, only the moons listed above will be generated.
# Setting type: Boolean
# Default value: false
Is Moon Blacklist a Whitelist? (All Players (for general, time, and/or misc settings)) = false

[_Moons_]

## If set to true, allows altering of some basic properties including the route price, risk level, and description for each moon.
# Setting type: Boolean
# Default value: false
Enable General Overrides? (All Players) = false

## If set to true, allows altering of the min/max scrap count and a multiplier for the individual scrap item's values.
# Setting type: Boolean
# Default value: false
Enable Scrap Overrides? (Host Only) = false

## If set to true, allows altering of the scrap list for each moon.
# Setting type: Boolean
# Default value: false
Enable Scrap List Overrides? (Host Only) = false

## If set to true, allows altering of the max power counts and lists for enemies on each moon (Interior, Nighttime, and Daytime).
# Setting type: Boolean
# Default value: false
Enable Enemy Overrides? (Host Only) = false

## If set to true, allows altering of the min/max count for each trap on each moon.
# Setting type: Boolean
# Default value: false
Enable Trap Overrides? (Host Only) = false

## If set to true, allows setting if time exists, the time speed multiplier, and if time should wait until the ship lands to begin moving (All per moon).
# Setting type: Boolean
# Default value: false
Enable Time Settings? (All Players) = false

## If set to true, allows altering of miscellaneous traits of moons such as hidden/unhidden status, and locked/unlocked status (Keep this false for Selene's Choice compat).
# Setting type: Boolean
# Default value: false
Enable Misc Overrides? (All Players) = false

## If set to true, Celest will be renamed to Celeste. This fixes any config entry mismatches between her and Celestria.
# Setting type: Boolean
# Default value: false
Rename Celest? (All Players) = false

[_TagLists_]

## Excludes the listed tags from the config. If they are already created, they will be removed on config regeneration.
# Setting type: String
# Default value: vanilla,custom,free,paid,argon,canyon,company,forest,marsh,military,ocean,rocky,tundra,valley,wasteland,volcanic,rosiedev,sfdesat,starlancermoons,tolian
Blacklisted Tags (Host Only) = vanilla,custom,free,paid,argon,canyon,company,forest,marsh,military,ocean,rocky,tundra,valley,wasteland,volcanic,rosiedev,sfdesat,starlancermoons,tolian

## If set to true, only the tags listed above will be generated.
# Setting type: Boolean
# Default value: true
Is Tag Blacklist a Whitelist? (Host Only) = true

## New 'tags' that are considered by this mod's settings (Remember to not blacklist them above).
# Setting type: String
# Default value: Smunguss,Glorble,Badungle
New Tags (Host Only) = Smunguss,Glorble,Badungle

[_Tags_]

## If set to true, allows adding/replacing enemies on levels based on matching tags (inside, day, and night).
# Setting type: Boolean
# Default value: false
Enable Enemy Injection by Tag? (Host Only) = false

## If set to true, allows adding scrap to levels based on matching tags.
# Setting type: Boolean
# Default value: false
Enable Scrap Injection by Tag? (Host Only) = false

[_WeatherLists_]

## Excludes the listed weathers from the config. If they are already created, they will be removed on config regeneration.
# Setting type: String
# Default value: DustClouds
Blacklisted Weathers (Host Only) = DustClouds

## If set to true, only the weathers listed above will be generated.
# Setting type: Boolean
# Default value: false
Is Weather Blacklist a Whitelist? (Host Only) = false

[_Weathers_]

## If set to true, allows adding/replacing enemies on levels based on the current weather (inside, day, and night).
# Setting type: Boolean
# Default value: false
Enable Enemy Injection by Current Weather? (Host Only) = false

## If set to true, allows adding scrap to levels based on the current weather as well as multipliers to the scrap amount and individiual scrap values.
# Setting type: Boolean
# Default value: false
Enable Scrap Injection by Current Weather? (Host Only) = false

[~Big Lists~]

## If set to true, you will be able to set the enemy lists for every moon with just three strings. This is helpful if you want to copy-paste from a spreadsheet.
## If you set enemy lists per moon with the setting above, they will contribute to the default value but be overridden by the big lists given the specific moon is found in the big list string.
# Setting type: Boolean
# Default value: false
Big Enemy Lists? (Host Only) = false

[~Global~]

## If set to true, allows adding/replacing enemies to the indoor, daytime, and nighttime enemy pools as well as adding scrap onto every moon through only a few settings.
# Setting type: Boolean
# Default value: false
Global Enemy and Scrap Injection (Host Only) = false

[~Misc~]

## If set to true, the in-game clock will be updated when time moves instead of every 3 seconds.
# Setting type: Boolean
# Default value: true
Accurate Clock? (All Players) = true

## If set to true, the config will not 'clean' itself after processing, this will result in a more crowded/messy config but will prevent unloaded entries from being removed.
# Setting type: Boolean
# Default value: false
Keep Orphaned Entries? (Personal) = false

## Leave at -1 to have it be random. The seed will be updated daily regardless of this setting.
# Setting type: Int32
# Default value: -1
Starting Random Seed (Host Only) = -1

## If set to true, the console will log the current indoor, daytime, and nighttime enemy spawn pools as well as the current scrap pool 10 seconds after loading into the level.
## Only accurate on the host, as enemy and scrap pools are ultimately decided by the host.
# Setting type: Boolean
# Default value: false
Log Current Enemy/Scrap Tables? (Host Only) = false

[~Shufflers~]

## If set to true, scrap that could have but did not spawn on a given day will be more likely to spawn the next day, provided that the scrap is in the next level's final scrap pool as well.
## This temporary selection chance boost increases every day the specific scrap was in the scrap pool but was not selected. The boost returns to 0 when ANY amount of that scrap is spawned.
# Setting type: Boolean
# Default value: false
Scrap Shuffler (Host Only) = true

## If set to true, enemies that could have but did spawn on a given day will be more likely to spawn the next day, provided that the enemy is in one of the next level's final enemy pools as well.
## This temporary selection chance boost increases every day the specific enemy was in the spawn pool but was not spawned. The boost returns to 0 when ANY number of that enemy is spawned inside, during the day, or during the night.
# Setting type: Boolean
# Default value: false
Enemy Shuffler (Host Only) = true

## If set to true, dungeons that are not selected after a given day will be more likely to be selected the next day, provided that the dungeon is possible to be selected by the next level.
## This temporary selection chance boost increases every day that dungeon was selectable but was not chosen. The boost returns to 0 when the dungeon is selected.
# Setting type: Boolean
# Default value: false
Dungeon Shuffler (Host Only) = true

## The number of days since the last appearance of this scrap is multiplied by a random value before being applied added to the scrap's rarity in the current scrap pool. If it is (1, 1) then it will increase the scrap's rarity by exactly 1 per day since it last spawned.
## By default, the scrap's rarity will be increased by 0, 1 or 2 * the number of days since it last spawned.
# Setting type: Int32
# Default value: 0
Scrap Shuffler Random Min = 0

## The number of days since the last appearance of this scrap is multiplied by a random value before being applied added to the scrap's rarity in the current scrap pool. If it is (1, 1) then it will increase the scrap's rarity by exactly 1 per day since it last spawned.
## By default, the scrap's rarity will be increased by 0, 1 or 2 * the number of days since it last spawned.
# Setting type: Int32
# Default value: 2
Scrap Shuffler Random Max = 2

## If set to true, the random value from above will be a percent of the rarity times the days since it last appeared.
## False: Rarity += DayCount * RandomValue
## True: Rarity *= (DayCount * (Randomvalue/100))
# Setting type: Boolean
# Default value: false
Scrap Shuffler Percent? = false

## Scrap listed here in 'ScrapName,ScrapName' format will be ignored by the shuffle.
# Setting type: String
# Default value: Default Values Are Empty
Blacklisted Scrap = Default Values Are Empty

## The number of days since the last appearance of this enemy is multiplied by a random value before being applied added to the enemy's rarity in all the current enemy pools. If it is (1, 1) then it will increase the enemy's rarity by exactly 1 per day since it last spawned.
## By default, the enemy's rarity will be increased by 0, 1 or 2 * the number of days since it last spawned.
# Setting type: Int32
# Default value: 0
Enemy Shuffler Random Min = 0

## The number of days since the last appearance of this enemy is multiplied by a random value before being applied added to the enemy's rarity in all the current enemy pools. If it is (1, 1) then it will increase the enemy's rarity by exactly 1 per day since it last spawned.
## By default, the enemy's rarity will be increased by 0, 1 or 2 * the number of days since it last spawned.
# Setting type: Int32
# Default value: 2
Enemy Shuffler Random Max = 2

## If set to true, the random value from above will be a percent of the rarity times the days since it last appeared.
## False: Rarity += DayCount * RandomValue
## True: Rarity *= (DayCount * (Randomvalue/100))
# Setting type: Boolean
# Default value: false
Enemy Shuffler Percent? = false

## Enemies listed here in 'EnemyName,EnemyName' format will be ignored by the shuffle.
# Setting type: String
# Default value: Default Values Are Empty
Blacklisted Enemies = Default Values Are Empty

## If set to true, the shuffler will increase enemy rarities before the add,multiply,replace enemy injections.
# Setting type: Boolean
# Default value: false
Shuffle Enemies First? = false

## The number of days since the last selection of this interior is multiplied by a random value before being applied added to the dungeon's rarity in all matches. If it is (1, 1) then it will increase the dungeon's rarity by exactly 1 per day since it was last selected.
## By default, the dungeon's rarity will be increased by 0-20% * the number of days since it last spawned.
# Setting type: Int32
# Default value: 0
Dungeon Shuffler Random Min = 0

## The number of days since the last selection of this interior is multiplied by a random value before being applied added to the dungeon's rarity in all matches. If it is (1, 1) then it will increase the dungeon's rarity by exactly 1 per day since it was last selected.
## By default, the dungeon's rarity will be increased by 0-20% * the number of days since it last spawned.
# Setting type: Int32
# Default value: 20
Dungeon Shuffler Random Max = 20

## If set to true, the random value from above will be a percent of the rarity times the days since it last appeared.
## False: Rarity += DayCount * RandomValue
## True: Rarity *= (DayCount * (Randomvalue/100))
# Setting type: Boolean
# Default value: true
Dungeon Shuffler Percent? = true

## If set to true, the shuffle data for enemies and scrap will be committed to the save file and loaded on start-up. This means that the counters for how many days since they last spawned will be preserved, and the rarity boosters will be applied accordingly on next landing.
## If this setting remains false, the shuffle will only exist in the session and be forgotten on reboot.
# Setting type: Boolean
# Default value: false
Save Shuffle Data = false

## If set to true, entries with a rarity of 0 or less will always increase linearly instead of by percent.
## This setting has a very specific use, enemies or scrap with a negative rarity will gradually increase until they become positive, effectively creating a minimum number of days between their appearances on that level.
# Setting type: Boolean
# Default value: false
Rollover Zero or Less = false

## If set to true, the shuffler will remove all scrap/enemies with a rarity of 0 before boosting rarities. This ensures they won’t gain days when they may have a rarity of 0 to prevent them from spawning on specific moons, during certain weather conditions, or in particular dungeons.
# Setting type: Boolean
# Default value: true
Remove Zero Rarity Scrap and Enemies? = true

[<Player Count Scaling>]

## If set to true, the value of scrap will be adjusted based on the number of players in the lobby, !!This happens at the START of the match and only affects newly spawned scrap!!
## PlayerDiff = PlayerCount - PlayerThreshold Then ScrapValuePercent *= (1 + Percent / 100) ^ -PlayerDiff
## Default Example: (1.1) ^ -(4-2) = 82.6% of the multiplier.
## Another Example: (1.05) ^ -(6-3) = 86.4% of the multiplier.
# Setting type: Boolean
# Default value: false
Adjust Scrap Value for PlayerCount? (Host Only) = true

## If set to true, the size multiplier will scale with the number of players in the lobby. More players will result in a larger interior.
## The same formula used to calculate the scrap value adjustment is used again here, but with a positive exponent, which creates a direct relationship between player count and dungeon size.
## Default Example: (1.1) ^ (4-2) = 21% dungeon size increase.
## Another Example: (1.15) ^ (3-4) = 13% dungeon size decrease.
# Setting type: Boolean
# Default value: false
Adjust Dungeon Size for PlayerCount? (All Players) = true

## Defines the 'standard' lobby size. If there are fewer players than this, scrap will be worth more. If there are more players, scrap will be worth less.
# Setting type: Int32
# Default value: 3
Scale Scrap Value PlayerCount Threshold = 3

## Percentage factor to apply to the scrap value multiplier based on the difference between the actual player count and the threshold above.
## This adjustment is exponential/logarithmic, so applying a 10% factor twice results in approximately 82.6% (i.e., (1.1)^-1 = 0.909, and (1.1)^-2 = 0.826).
# Setting type: Single
# Default value: 10
Scale Scrap Value Percent = 10

## The absolute difference between the PlayerCount and Threshold is multiplied by this value before being added to the Scale Scrap Value Percent.
## Example: If this setting is 5, setting above is 10% and there is 1 player the lobby with a threshold of 3, it will increment by 44% instead of 21%.
## Example 2: If this setting is 10, setting above is 25% and there is 6 player the lobby with a threshold of 2, it will decrease by 86.5% instead of 41%
# Setting type: Single
# Default value: 5
Scale Scrap Value Percent Change = 5

## The Scrap Value Adjustment for player count will never multiply the global scrap value by less than this value.
# Setting type: Single
# Default value: 0.5
Scale Scrap Value Min = 0.5

## The Scrap Value Adjustment for player count will never multiply the global scrap value by more than this value.
# Setting type: Single
# Default value: 1.5
Scale Scrap Value Max = 1.5

## Defines the 'standard' lobby size. If there are fewer players than this, the dungeon will be smaller. If there are more players, the dungeon will be larger.
# Setting type: Int32
# Default value: 4
Scale Dungeon Size PlayerCount Threshold = 4

## Percentage factor to apply to the dungeon size multiplier based on the difference between the actual player count and the threshold above.
## This adjustment is exponential/logarithmic, so applying a 20% factor twice results in approximately 144% (i.e., (1.2)^1 = 1.20, and (1.2)^2 = 1.44).
# Setting type: Single
# Default value: 5
Scale Dungeon Size Percent = 5

## The absolute difference between the PlayerCount and Threshold is multiplied by this value before being added to the Scale Dungeon Size Percent.
## Example: If this setting is 5, setting above is 20% and there is 1 player the lobby with a threshold of 3, it will increment by 69% instead of 44%.
## Example 2: If this setting is 7, setting above is 8% and there is 6 player the lobby with a threshold of 2, it will decrease by 70.8% instead of 26.5%
# Setting type: Single
# Default value: 2.5
Scale Dungeon Size Percent Change = 2.5

## The Dungeon Size Adjustment for player count will never multiply the dungeon size by less than this value.
# Setting type: Single
# Default value: 0.5
Scale Dungeon Size Min = 0.5

## The Dungeon Size Adjustment for player count will never multiply the dungeon size by more than this value.
# Setting type: Single
# Default value: 1.5
Scale Dungeon Size Max = 1.5

[>Fines<]

## If set to true, allows you to set the fine for dead/missing players and the reduction on the fine for having brought the body back to the ship.
# Setting type: Boolean
# Default value: false
Enable Fine Overrides? (All Players) = false

[>ScanNodes<]

## If set to true, allows you to set the min/max ranges for the scan nodes on the ship, main entrance, and fire exits (if you have ScannableFireExit installed).
# Setting type: Boolean
# Default value: false
Enable Scan Node Extensions? (All Players) = false

