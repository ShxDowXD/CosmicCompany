## Settings file was created by plugin UsualScrap v1.8.6
## Plugin GUID: Emil.UsualScrap

[1. Debugging]

## Whether or not to log actions for debugging purposes
# Setting type: Boolean
# Default value: false
Log actions for debugging purposes = false

[2. General Mechanic Changes]

## Whether or not capsules are disabled inside the ship when landed (Capsules are disabled in orbit always).
# Setting type: Boolean
# Default value: true
Capsules Disabled On The Ship = true

## Whether or not tickets function when used on items with a value below 5 (Meaning tickets will no longer work on most equipment whose value is normally 0).
# Setting type: Boolean
# Default value: true
Tickets function on cheap items = true

[3. Facility Scrap Pack]

## Whether or not the Facility Scrap Pack is enabled.
# Setting type: Boolean
# Default value: false
Facility Scrap Pack Enabled = false

[3. Mansion Scrap Pack]

## Whether or not the Mansion Scrap Pack is enabled.
# Setting type: Boolean
# Default value: false
Mansion Scrap Pack Enabled = false

[Item - US_Crowbar]

## Whether or not the US_Crowbar is loaded.
# Setting type: Boolean
# Default value: true
US_Crowbar is loaded = true

## Whether or not the US_Crowbar spawns as scrap.
# Setting type: Boolean
# Default value: true
US_Crowbar is a scrap item = true

## Where and how often the US_Crowbar will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
US_Crowbar Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the US_Crowbar will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 30
US_Crowbar Global Spawning = 30

## Whether or not the US_Crowbar is a store item.
# Setting type: Boolean
# Default value: false
US_Crowbar is a store item = false

## The store price of the US_Crowbar (Cannot be a negative number).
# Setting type: Int32
# Default value: 60
US_Crowbar store price = 60

[Item - US_Padlock]

## Whether or not the US_Padlock is loaded.
# Setting type: Boolean
# Default value: true
US_Padlock is loaded = true

## Whether or not the US_Padlock spawns as scrap.
# Setting type: Boolean
# Default value: true
US_Padlock is a scrap item = true

## Where and how often the US_Padlock will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
US_Padlock Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the US_Padlock will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 30
US_Padlock Global Spawning = 30

## Whether or not the US_Padlock is a store item.
# Setting type: Boolean
# Default value: false
US_Padlock is a store item = false

## The store price of the US_Padlock (Cannot be a negative number).
# Setting type: Int32
# Default value: 15
US_Padlock store price = 15

[Scrap Item - Bloody Capsule]

## Whether or not the Bloody Capsule is loaded.
# Setting type: Boolean
# Default value: true
Bloody Capsule is loaded = true

## Whether or not the Bloody Capsule spawns as scrap.
# Setting type: Boolean
# Default value: true
Bloody Capsule is a scrap item = true

## Where and how often the Bloody Capsule will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
Bloody Capsule Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the Bloody Capsule will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 15
Bloody Capsule Global Spawning = 15

[Scrap Item - Candy Dispenser]

## Whether or not the Candy Dispenser is loaded.
# Setting type: Boolean
# Default value: true
Candy Dispenser is loaded = true

## Whether or not the Candy Dispenser spawns as scrap.
# Setting type: Boolean
# Default value: true
Candy Dispenser is a scrap item = true

## Where and how often the Candy Dispenser will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
Candy Dispenser Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the Candy Dispenser will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 30
Candy Dispenser Global Spawning = 30

[Scrap Item - Doomsayer Bell]

## Whether or not the Doomsayer Bell is loaded.
# Setting type: Boolean
# Default value: true
Doomsayer Bell is loaded = true

## Whether or not the Doomsayer Bell spawns as scrap.
# Setting type: Boolean
# Default value: true
Doomsayer Bell is a scrap item = true

## Where and how often the Doomsayer Bell will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
Doomsayer Bell Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the Doomsayer Bell will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 20
Doomsayer Bell Global Spawning = 20

[Scrap Item - Frigid Capsule]

## Whether or not the Frigid Capsule is loaded.
# Setting type: Boolean
# Default value: true
Frigid Capsule is loaded = true

## Whether or not the Frigid Capsule spawns as scrap.
# Setting type: Boolean
# Default value: true
Frigid Capsule is a scrap item = true

## Where and how often the Frigid Capsule will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
Frigid Capsule Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the Frigid Capsule will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 15
Frigid Capsule Global Spawning = 15

[Scrap Item - Fuel Cylinder]

## Whether or not the Fuel Cylinder is loaded.
# Setting type: Boolean
# Default value: true
Fuel Cylinder is loaded = true

## Whether or not the Fuel Cylinder spawns as scrap.
# Setting type: Boolean
# Default value: true
Fuel Cylinder is a scrap item = true

## Where and how often the Fuel Cylinder will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
Fuel Cylinder Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the Fuel Cylinder will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 20
Fuel Cylinder Global Spawning = 20

[Scrap Item - Gloomy Capsule]

## Whether or not the Gloomy Capsule is loaded.
# Setting type: Boolean
# Default value: true
Gloomy Capsule is loaded = true

## Whether or not the Gloomy Capsule spawns as scrap.
# Setting type: Boolean
# Default value: true
Gloomy Capsule is a scrap item = true

## Where and how often the Gloomy Capsule will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
Gloomy Capsule Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the Gloomy Capsule will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 15
Gloomy Capsule Global Spawning = 15

[Scrap Item - Golden US_Ticket]

## Whether or not the Golden US_Ticket is loaded.
# Setting type: Boolean
# Default value: true
Golden US_Ticket is loaded = true

## Whether or not the Golden US_Ticket spawns as scrap.
# Setting type: Boolean
# Default value: true
Golden US_Ticket is a scrap item = true

## Where and how often the Golden US_Ticket will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
Golden US_Ticket Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the Golden US_Ticket will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 5
Golden US_Ticket Global Spawning = 5

[Scrap Item - Noxious Capsule]

## Whether or not the Noxious Capsule is loaded.
# Setting type: Boolean
# Default value: true
Noxious Capsule is loaded = true

## Whether or not the Noxious Capsule spawns as scrap.
# Setting type: Boolean
# Default value: true
Noxious Capsule is a scrap item = true

## Where and how often the Noxious Capsule will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
Noxious Capsule Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the Noxious Capsule will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 15
Noxious Capsule Global Spawning = 15

[Scrap Item - Radioactive Cell]

## Whether or not the Radioactive Cell is loaded.
# Setting type: Boolean
# Default value: true
Radioactive Cell is loaded = true

## Whether or not the Radioactive Cell spawns as scrap.
# Setting type: Boolean
# Default value: true
Radioactive Cell is a scrap item = true

## Where and how often the Radioactive Cell will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
Radioactive Cell Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the Radioactive Cell will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 20
Radioactive Cell Global Spawning = 20

[Scrap Item - US_Rose]

## Whether or not the US_Rose is loaded.
# Setting type: Boolean
# Default value: true
US_Rose is loaded = true

## Whether or not the US_Rose spawns as scrap.
# Setting type: Boolean
# Default value: true
US_Rose is a scrap item = true

## Where and how often the US_Rose will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
US_Rose Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the US_Rose will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 30
US_Rose Global Spawning = 30

[Scrap Item - US_Scissors]

## Whether or not the US_Scissors is loaded.
# Setting type: Boolean
# Default value: true
US_Scissors is loaded = true

## Whether or not the US_Scissors spawns as scrap.
# Setting type: Boolean
# Default value: true
US_Scissors is a scrap item = true

## Where and how often the US_Scissors will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
US_Scissors Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the US_Scissors will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 30
US_Scissors Global Spawning = 30

[Scrap Item - US_Ticket]

## Whether or not the US_Ticket is loaded.
# Setting type: Boolean
# Default value: true
US_Ticket is loaded = true

## Whether or not the US_Ticket spawns as scrap.
# Setting type: Boolean
# Default value: true
US_Ticket is a scrap item = true

## Where and how often the US_Ticket will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
US_Ticket Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the US_Ticket will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 40
US_Ticket Global Spawning = 40

[Scrap Item - Walking Cane]

## Whether or not the Walking Cane is loaded.
# Setting type: Boolean
# Default value: true
Walking Cane is loaded = true

## Whether or not the Walking Cane spawns as scrap.
# Setting type: Boolean
# Default value: true
Walking Cane is a scrap item = true

## Where and how often the Walking Cane will spawn (Moon spawn weights will individually overwrite global spawn weights, set to -1 or leave blank to disable. Correct spelling and formatting is critical, shown, and a log will appear pointing out unreadable/disabled configs.
# Setting type: String
# Default value: experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1
Walking Cane Moon Spawning = experimentation:-1, vow:-1, march:-1, assurance:-1, offense:-1, rend:-1, dine:-1, titan:-1, adamance:-1, artifice:-1, embrion:-1

## How often the Walking Cane will spawn globally (Will affect all moons including modded moons unless overwritten by moon spawn weights, -1 to disable).
# Setting type: Int32
# Default value: 15
Walking Cane Global Spawning = 15

[Store Item - Handlamp]

## Whether or not the Handlamp is loaded.
# Setting type: Boolean
# Default value: true
Handlamp is loaded = true

## Whether or not the Handlamp is a store item.
# Setting type: Boolean
# Default value: true
Handlamp is a store item = true

## The store price of the Handlamp (Cannot be a negative number).
# Setting type: Int32
# Default value: 25
Handlamp store price = 25

[Store Item - Medical Kit]

## Whether or not the Medical Kit is loaded.
# Setting type: Boolean
# Default value: true
Medical Kit is loaded = true

## Whether or not the Medical Kit is a store item.
# Setting type: Boolean
# Default value: true
Medical Kit is a store item = true

## The store price of the Medical Kit (Cannot be a negative number).
# Setting type: Int32
# Default value: 120
Medical Kit store price = 120

[Store Item - Productivity Autoinjector]

## Whether or not the Productivity Autoinjector is loaded.
# Setting type: Boolean
# Default value: true
Productivity Autoinjector is loaded = true

## Whether or not the Productivity Autoinjector is a store item.
# Setting type: Boolean
# Default value: true
Productivity Autoinjector is a store item = true

## The store price of the Productivity Autoinjector.
# Setting type: Int32
# Default value: 90
Productivity Autoinjector store price = 90

[Store Item - Shift Controller]

## Whether or not the Shift Controller is loaded.
# Setting type: Boolean
# Default value: true
Shift Controller is loaded = true

## Whether or not the Shift Controller is a store item.
# Setting type: Boolean
# Default value: true
Shift Controller is a store item = true

## The store price of the Shift Controller.
# Setting type: Int32
# Default value: 225
Shift Controller store price = 225

## The max range of the Shift Controller's great/first connection range. (The great/first connection range starts at 0 and stops at this value, The average/middle connection range starts at this value)
# Setting type: Int32
# Default value: 50
Shift Controllers great/first connection range = 50

## The range where the Shift Controller enters it's poor/last connection range. (The average/middle connection range stops at this value, The poor/last connection range starts at this value)
# Setting type: Int32
# Default value: 175
Shift Controllers poor/last connection range = 175

[Store Item - US_Bandages]

## Whether or not the US_Bandages are loaded.
# Setting type: Boolean
# Default value: true
US_Bandages are loaded = true

## Whether or not the US_Bandages are a store item.
# Setting type: Boolean
# Default value: true
US_Bandages are a store item = true

## The store price of the US_Bandages (Cannot be a negative number).
# Setting type: Int32
# Default value: 20
US_Bandages store price = 20

[Store Item - US_Defibrillator]

## Whether or not the US_Defibrillator is loaded.
# Setting type: Boolean
# Default value: true
US_Defibrillator is loaded = true

## Whether or not the US_Defibrillator is a store item.
# Setting type: Boolean
# Default value: true
US_Defibrillator is a store item = true

## The store price of the US_Defibrillator (Cannot be a negative number).
# Setting type: Int32
# Default value: 375
US_Defibrillator store price = 375

## Whether or not Defibrillators have limited uses.
# Setting type: Boolean
# Default value: true
US_Defibrillator uses are limited = true

## The number of uses each US_Defibrillator has (Uses have a minimum of 1, uses are used up on players successfully revived only).
# Setting type: Int32
# Default value: 3
Defibrillators savedUses = 3

## Whether or not existing Defibrillators will refill their uses upon landing on a moon
# Setting type: Boolean
# Default value: false
US_Defibrillator refills every moon landing = false

## Whether or not specific causes of death will prevent the defibrillator from reviving players (Ex - Corpses decapitated by CoilHeads, Corpses snipped in half by a Barber, Corpses head popped by the Ghost Girl).
# Setting type: Boolean
# Default value: true
US_Defibrillator follows perma-death rules = true

[Store Item - US_Toolbox]

## Whether or not the US_Toolbox is loaded.
# Setting type: Boolean
# Default value: true
US_Toolbox is loaded = true

## Whether or not the US_Toolbox is a store item.
# Setting type: Boolean
# Default value: true
US_Toolbox is a store item = true

## The store price of the US_Toolbox.
# Setting type: Int32
# Default value: 115
US_Toolbox store price = 115

